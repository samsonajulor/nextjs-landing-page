{"ast":null,"code":"var _jsxFileName = \"/Users/esoftdev/Documents/GitHub/nextjs-landing-page/src/components/splitButton.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { styled } from \"@mui/material\"; // options\n\nconst options = [\"This month\", \"Last month\", \"Previous month\"];\nconst StyledBGroupButton = styled(ButtonGroup)(({\n  theme\n}) => ({\n  \"& .MuiButtonGroup-grouped\": {\n    color: theme.customProps.color,\n    backgroundColor: \"transparent\",\n    fontSize: \".8rem\",\n    borderRight: \"none !important\",\n    paddingRight: \"0\",\n    textTransform: \"none\",\n    paddingBottom: \".7rem\",\n    \"&: hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n}));\n/**\n * \n * @returns \n */\n\nconst SplitButton = () => {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef < HTMLDivElement > null;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(StyledBGroupButton, {\n    variant: \"contained\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    disableElevation: true,\n    disableRipple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, options[selectedIndex]), __jsx(Button, {\n    size: \"small\",\n    \"aria-controls\": open ? \"split-button-menu\" : undefined,\n    \"aria-expanded\": open ? \"true\" : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(MdKeyboardArrowDown, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), __jsx(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(MenuList, {\n    id: \"split-button-menu\",\n    autoFocusItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, options.map((option, index) => __jsx(MenuItem, {\n    key: option,\n    selected: index === selectedIndex,\n    onClick: event => handleMenuItemClick(event, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, option))))))));\n};\n\nexport default SplitButton;","map":{"version":3,"names":["React","Button","ButtonGroup","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","MdKeyboardArrowDown","styled","options","StyledBGroupButton","theme","color","customProps","backgroundColor","fontSize","borderRight","paddingRight","textTransform","paddingBottom","SplitButton","open","setOpen","useState","anchorRef","useRef","HTMLDivElement","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"sources":["/Users/esoftdev/Documents/GitHub/nextjs-landing-page/src/components/splitButton.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { styled } from \"@mui/material\";\n\n// options\nconst options = [\"This month\", \"Last month\", \"Previous month\"];\n\nconst StyledBGroupButton = styled(ButtonGroup)(({ theme }) => ({\n  \"& .MuiButtonGroup-grouped\": {\n    color: theme.customProps.color,\n    backgroundColor: \"transparent\",\n    fontSize: \".8rem\",\n    borderRight: \"none !important\",\n    paddingRight: \"0\",\n    textTransform: \"none\",\n    paddingBottom: \".7rem\",\n\n    \"&: hover\": {\n  backgroundColor: \"transparent\",\n}\n  },\n}));\n\n/**\n * \n * @returns \n */\nconst SplitButton = () => {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (\n    event,\n    index\n  ) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <StyledBGroupButton\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        disableElevation\n        disableRipple\n      >\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <MdKeyboardArrowDown size={20} />\n        </Button>\n      </StyledBGroupButton>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n};\n\nexport default SplitButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}