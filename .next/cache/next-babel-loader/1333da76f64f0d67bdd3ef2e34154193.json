{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/esoftdev/Documents/GitHub/nextjs-landing-page/src/components/splitButton.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { styled } from \"@mui/material\"; // options\n\nvar options = [\"This month\", \"Last month\", \"Previous month\"];\nvar StyledBGroupButton = styled(ButtonGroup)(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    \"& .MuiButtonGroup-grouped\": {\n      color: theme.customProps.color,\n      backgroundColor: \"transparent\",\n      fontSize: \".8rem\",\n      borderRight: \"none !important\",\n      paddingRight: \"0\",\n      textTransform: \"none\",\n      paddingBottom: \".7rem\",\n      \"&: hover\": {\n        backgroundColor: \"transparent\"\n      }\n    }\n  };\n});\n/**\n * \n * @returns \n */\n\nvar SplitButton = function SplitButton() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef < HTMLDivElement > null;\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  var handleClick = function handleClick() {\n    console.info(\"You clicked \".concat(options[selectedIndex]));\n  };\n\n  var handleMenuItemClick = function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(StyledBGroupButton, {\n    variant: \"contained\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    disableElevation: true,\n    disableRipple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, options[selectedIndex]), __jsx(Button, {\n    size: \"small\",\n    \"aria-controls\": open ? \"split-button-menu\" : undefined,\n    \"aria-expanded\": open ? \"true\" : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(MdKeyboardArrowDown, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }))), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), __jsx(Paper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(MenuList, {\n      id: \"split-button-menu\",\n      autoFocusItem: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, options.map(function (option, index) {\n      return __jsx(MenuItem, {\n        key: option,\n        selected: index === selectedIndex,\n        onClick: function onClick(event) {\n          return handleMenuItemClick(event, index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, option);\n    })))));\n  }));\n};\n\n_s(SplitButton, \"fOMdj/+UT6imGTWee6DbHDPSBrM=\");\n\n_c = SplitButton;\nexport default SplitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"names":["React","Button","ButtonGroup","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","MdKeyboardArrowDown","styled","options","StyledBGroupButton","theme","color","customProps","backgroundColor","fontSize","borderRight","paddingRight","textTransform","paddingBottom","SplitButton","useState","open","setOpen","anchorRef","useRef","HTMLDivElement","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"sources":["/Users/esoftdev/Documents/GitHub/nextjs-landing-page/src/components/splitButton.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport Grow from \"@mui/material/Grow\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { styled } from \"@mui/material\";\n\n// options\nconst options = [\"This month\", \"Last month\", \"Previous month\"];\n\nconst StyledBGroupButton = styled(ButtonGroup)(({ theme }) => ({\n  \"& .MuiButtonGroup-grouped\": {\n    color: theme.customProps.color,\n    backgroundColor: \"transparent\",\n    fontSize: \".8rem\",\n    borderRight: \"none !important\",\n    paddingRight: \"0\",\n    textTransform: \"none\",\n    paddingBottom: \".7rem\",\n\n    \"&: hover\": {\n  backgroundColor: \"transparent\",\n}\n  },\n}));\n\n/**\n * \n * @returns \n */\nconst SplitButton = () => {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (\n    event,\n    index\n  ) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target)\n    ) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <StyledBGroupButton\n        variant=\"contained\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        disableElevation\n        disableRipple\n      >\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n          size=\"small\"\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select merge strategy\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <MdKeyboardArrowDown size={20} />\n        </Button>\n      </StyledBGroupButton>\n      <Popper\n        open={open}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\" autoFocusItem>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n};\n\nexport default SplitButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}